module(mirth-build.package-data)

import(std.prelude)
import(std.path)
import(std.str)
import(std.maybe)
import(std.list)
import(std.either)

data(Error,
    MissingPath,
    MissingName)

def(Error.show, Error -- Str, 
    MissingPath -> "Missing Path",
    MissingName -> "Missing Name")

data(GCCFlags,
    GCCFlags ->
        linker-flags:Maybe(Str)
	compiler-flags:Maybe(Str))

data(PackageData,
    PackageData -> 
        name:Str 
	path:Path
	c:GCCFlags
	dependencies:List(PackageData) 
	bin:List([Str Str]))

data(PackageDataBuilder,
    PackageDataBuilder -> 
        name:Maybe(Str) 
	path:Maybe(Path)
	c:GCCFlags
	dependencies:List(PackageData) 
	bin:List([Str Str]))

def(PackageDataBuilder.new, -- PackageDataBuilder,
    NONE >name 
    L0 >dependencies 
    NONE >path 
        NONE >linker-flags
	NONE >compiler-flags
    GCCFlags.GCCFlags >c
    L0 >bin 
    PackageDataBuilder.PackageDataBuilder)

def(PackageDataBuilder.build, PackageDataBuilder -- Either(Error, PackageData),
    \(builder ->
        builder name match(
            NONE -> MissingName LEFT,
	    SOME -> drop builder path match(
	        NONE -> MissingPath LEFT,
	        SOME -> drop builder /PackageDataBuilder 
		    name> unwrap >name path> unwrap >path PackageData.PackageData RIGHT
	    )
        ) 
    )
)
